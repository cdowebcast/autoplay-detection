const canAutoplay = () => new Promise((resolve, reject) => {
  const videofile = `data:video/mp4;base64,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`;
  let supportsAutoplay;
    
  const cleanUp = video => document.body.removeChild(video);
    
  const successPlay = video => () => {
    cleanUp(video);
    resolve(true);        
  };

  const failPlay = video => () => {
    cleanUp(video);
    resolve(false);
  };
    
  try {
    let video = document.createElement('video');
    video.autoplay = true;
    video.inline = true;
    video.src = videofile;
    video.load();
    video.style.display = 'none';
    video.playing = false;
    video.volume = 0.001;
    video.controls = true;

    document.body.appendChild(video);

    video.play()
      .then(successPlay(video))
      .catch(failPlay(video));
  } catch (err) {
    console.log('opps, something went wrong');
    reject(false);
  }
 });

canAutoplay().then(supported => {
  console.log('Can it autoplay?', supported);  
})
